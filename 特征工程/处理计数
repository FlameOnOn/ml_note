对计数的处理可以有以下几个方法:
1. 二值化: 忽略了计数本身,有计数就是1,没计数就是0
2. 区间量化. 把连续型数值映射为离散型数值.为了对数据进行区间量化，必须确定每个分箱的宽度。有两种确定分箱宽度的方法：固定宽度分箱和自适应分箱

(1)固定长度分箱:
通过除法映射到间隔均匀的分箱中: np.floor_divide(small_counts, 10)
通过对数函数映射到指数宽度分箱: np.floor(np.log10(large_counts))
(2)分位数分箱
固定宽度分箱非常容易计算，但如果计数值中有比较大的缺口，就会产生很多没有任何数据的空箱子。根据数据的分布特点，进行自适应的箱体定位，就可以解决这个问题。这种方法可以使用数据分布的分位数来实现
计算十分位数:deciles=biz_df['review_count'].quantile([.1,.2, .3, .4, .5, .6, .7, .8, .9])
pd.qcut(large_counts, 4, labels=False)将数据映射为它的分位数
